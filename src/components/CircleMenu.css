#menu #menu-button {
  clip-path: polygon(
    20% 0%,
    80% 0%,
    100% 20%,
    100% 80%,
    80% 100%,
    20% 100%,
    0% 80%,
    0% 20%
  );
  animation: circle-menu-open 0.8s;
  animation-fill-mode: both;
}

#menu.close #menu-button {
  animation: circle-menu-close 0.8s;
  animation-fill-mode: both;
}

@keyframes circle-menu-open {
  to {
    transform: scale(1);
  }
  from {
    transform: scale(0.6);
  }
}

@keyframes circle-menu-close {
  to {
    transform: scale(0.6);
  }
}

#menu-button .line {
  --second: 100ms;
  transition:
    y var(--second) ease-in var(--second),
    rotate var(--second) ease-in,
    opacity 0ms var(--second);
  transform-origin: center;
}

#menu-button.change .line {
  transition:
    y var(--second) ease-in,
    rotate var(--second) ease-in var(--second),
    opacity 0ms var(--second);
}

#menu-button.change :is(.top, .bottom) {
  y: 45;
}

#menu-button.change .top {
  rotate: 45deg;
}

#menu-button.change .middle {
  opacity: 0;
}

#menu-button.change .bottom {
  rotate: -45deg;
}

#menu .circle-link {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: -50%;
  left: -50%;
  width: 40px;
  height: 40px;
  font-size: 1rem;
  border-radius: 2rem;

  --perAngle: calc(var(--range) / var(--numberOfElement));
  --angle: calc(var(--startAngle) + (var(--perAngle) * var(--index)));
  --x: calc(cos(var(--angle)) * 150px);
  --y: calc(sin(var(--angle)) * 150px);
  animation: circle-link-open 0.5s;
  animation-delay: calc(0.5s + var(--index) * 0.05s);
  animation-fill-mode: both;
}

#menu.close .circle-link {
  animation: circle-link-close 0.5s;
  animation-fill-mode: both;
}

@keyframes circle-link-open {
  0% {
    opacity: 0;
    translate: -50% -50%;
    pointer-events: none;
  }

  to {
    opacity: 1;
    translate: calc(var(--x) - 50%) calc(var(--y) - 50%);
    pointer-events: auto;
  }
}

@keyframes circle-link-close {
  0% {
    opacity: 1;
    translate: calc(var(--x) - 50%) calc(var(--y) - 50%);
    pointer-events: none;
  }

  to {
    opacity: 0;
    display: none;
    translate: -50% -50%;
    pointer-events: auto;
  }
}
